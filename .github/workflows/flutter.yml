name: Flutter APK Build

on:
  push:
    branches:
      - flutter  # Trigger only for changes in the flutter branch
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Cache Flutter dependencies
    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-flutter-dependencies-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-flutter-dependencies-

    # Set up Flutter SDK
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'

    # Install dependencies
    - name: Install dependencies
      run: flutter pub get

    # Cache build outputs (APK)
    - name: Cache APK Build
      uses: actions/cache@v3
      with:
        path: build/app/outputs/flutter-apk
        key: ${{ runner.os }}-flutter-apk-${{ hashFiles('**/lib/**/*.dart') }}
        restore-keys: |
          ${{ runner.os }}-flutter-apk-

    # Run tests (optional)
    - name: Run tests
      run: flutter test

    # Build APK (ensure correct APK output name)
    - name: Build APK
      run: flutter build apk --debug  # You can change to --release if you want a release APK

    # Upload APK to GitHub folder "APK BUILDS"
    - name: Upload APK to APK BUILDS folder
      run: |
        mkdir -p APK_BUILDS
        mv build/app/outputs/flutter-apk/app-debug.apk APK_BUILDS/  # Ensure correct APK name is used for debug builds

    # Set up SSH for EC2
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/github-actions-key
        chmod 600 ~/.ssh/github-actions-key
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

    # Create Folder on EC2
    - name: Create Folder on EC2
      run: |
        ssh -i ~/.ssh/github-actions-key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p /home/ubuntu/haider"
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

    # Transfer APK to EC2 using SCP
    - name: Transfer APK to EC2 Server
      run: |
        scp -i ~/.ssh/github-actions-key APK_BUILDS/app-debug.apk ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/haider
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
